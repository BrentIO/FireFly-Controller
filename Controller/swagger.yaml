openapi: 3.1.0
info:
  title: FireFly Controller
  description: Configure and manage controllers and client configurations
  version: 2024.6.1
servers:
  - url: http://{domain}
    variables:
      domain:
        default: 192.168.10.101
        description: IP address of the device's ethernet interface
tags:
  - name: Authorization
    description: Mangage long-term http authorizations
  - name: Event and Error Logs
    description: Operations for the event and error logs
  - name: Version
    description: Operations for the hardware and firmware versions
  - name: Certificates
    description: Operations for the storage, retrieval, and management of certificates
  - name: Configuration
    description: Operations for configuring various services on both controllers and clients
  - name: High Voltage
    description: Operations for configuring high voltage devices
  - name: Controllers
    description: Mangage controllers
  - name: Clients
    description: Mangage Clients

##########################################################
## NOTE: This may not render except in the next-gen     ##
## Swagger UI renderer https://editor-next.swagger.io/  ##
##########################################################

paths:


##########################################################
## Version                                              ##
##########################################################
  
  /api/version:
    get:
      tags:
        - Version
      summary: Hardware and firmware version information
      description: Retrieves the hardware and firmware version information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationVersionInfo'
  /ui/version:
    get:
      tags:
        - Version
      summary: User interface version information
      description: Retrieves the user interface version information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uiVersionInfo'
        '404':
          description: File system failure


##########################################################
## Events and Errors                                    ##
##########################################################
  
  /api/errors:
    get:
      tags:
        - Event and Error Logs
      summary: Error log information
      description: Retrieve all of the active errors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorLog'
              examples:
                Events in the log:
                  $ref: '#/components/examples/errorLog'
                No log entries:
                  $ref: '#/components/examples/emptyArray'
  /api/events:
    get:
      tags:
        - Event and Error Logs
      summary: Event log information
      description: Retrieve all of the events still remaining in the event log
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventLog'
              examples:
                Events in the log:
                  $ref: '#/components/examples/eventLog'
                No log entries:
                  $ref: '#/components/examples/emptyArray'


##########################################################
## OTA Firmware                                         ##
##########################################################
  
  /api/ota:
    post:
      tags:
        - Configuration
      summary: OTA firmware configuration
      description: Stores the over-the-air (OTA) firmware configuration
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otaConfiguration'
            examples:
                http:
                  $ref: '#/components/examples/ota_http'
                https:
                  $ref: '#/components/examples/ota_https'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              examples:
                Missing body:
                  value:
                    message: Request requires body
                Missing certificate field for on https:
                  value:
                    message: https requires certificate
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Configuration already exists
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    get:
      tags:
        - Configuration
      summary: OTA firmware configuration
      description: Retrieve the over-the-air (OTA) firmware configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/otaConfiguration'
              examples:
                http:
                  $ref: '#/components/examples/ota_http'
                https:
                  $ref: '#/components/examples/ota_https'
        '404':
          description: No configuration exists
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - Configuration
      summary: OTA firmware configuration
      description: Delete the over-the-air (OTA) firmware configuration
      security:
        - visualToken: []
      responses:
        '204':
          description: Deleted configuration successfully
        '401':
          description: Unauthorized
        '404':
          description: No configuration exists
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted

  /api/ota/app:
    post:
      tags:
        - Configuration
      summary: Force application OTA update
      description: Forces an over-the-air (OTA) application firmware retrieval with the URL provided
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forceOTAConfiguration'
            examples:
              http:
                value:
                  url: http://www.somewhere.com/firmware.bin
              https:
                value:
                  url: https://www.somewhere.com/firmware.bin
                  certificate: mycert.pem
      responses:
        '202':
          description: Request accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized

  /api/ota/spiffs:
    post:
      tags:
        - Configuration
      summary: Force SPIFFs OTA update
      description: Forces an over-the-air (OTA) SPIFFs retrieval with the URL provided
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forceOTAConfiguration'
            examples:
              http:
                value:
                  url: http://www.somewhere.com/spiffs.bin
              https:
                value:
                  url: https://www.somewhere.com/spiffs.bin
                  certificate: mycert.pem
      responses:
        '202':
          description: Request accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized


##########################################################
## Certificates                                         ##
##########################################################

  /certs:
    get:
      tags:
        - Certificates
      summary: Get certificate list
      description: Retrives the list of certificates in flash storage
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    post:
      tags:
        - Certificates
      summary: Create a new certificate
      description: Creates a new certificate with the content in the payload
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Filename must be 31 characters or less
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Certificate already exists
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted

  /certs/{filename}:
    get:
      tags:
        - Certificates
      summary: Get a certificate
      description: Retrieves the content of a certificate
      security:
        - visualToken: []
      parameters:
        - in: path
          name: filename
          schema:
            type: string
            examples: 
              - mycert.pem
            maxLength: 31
          required: true
          description: Certificate filename to retrieve
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/certificateContent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Filename must be 31 characters or less
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - Certificates
      summary: Delete a certificate
      description: Deletes the requested certificate from flash storage
      security:
        - visualToken: []
      parameters:
        - in: path
          name: filename
          schema:
            type: string
            examples: 
              - mycert.pem
            maxLength: 31
          required: true
          description: Certificate filename to delete
      responses:
        '204':
          description: Deleted certificate successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Filename must be 31 characters or less
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
  /auth:
    post:
      tags:
        - Authorization
      summary: Authorize the visual token
      description: Creates a long-term authorization for a visual token (typically 60 minutes)
      security:
        - visualToken: []
      responses:
        '204':
          description: Authorized
        '401':
          description: Unauthorized


##########################################################
## Provisioning                                         ##
##########################################################

  /api/provisioning:
    get:
      tags:
        - Configuration
      summary: Retrieve the status of provisioning mode on this controller
      description: Retrieve the status of provisioning mode on this controller
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: Indicates if provisioning mode is enabled on the device
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
    put:
      tags:
        - Configuration
      summary: Enable provisioning mode on this controller
      description: Enable provisioning mode on this controller
      security:
        - visualToken: []
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Another controller is already in provisioning mode
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
    delete:
      tags:
        - Configuration
      summary: Disable provisioning mode on this controller
      description: Disable provisioning mode on this controller
      security:
        - visualToken: []
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Controller is not in provisioning mode
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'


##########################################################
## High Voltage                                         ##
##########################################################

  /api/breakers:
    get:
      tags:
        - High Voltage
      summary: Retrieve the list of breakers
      description: Retrieves the list of all breakers
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/breaker'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    put:
      tags:
        - High Voltage
      summary: Create or update the list of breakers
      description: Create or update the list of breakers. Note that contents are not validated and are immediately stored to the file system.
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/breaker'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - High Voltage
      summary: Delete the list of breakers
      description: Delete the list of breakers
      security:
        - visualToken: []
      responses:
        '204':
          description: File Deleted Successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted

  /api/relays:
    get:
      tags:
        - High Voltage
      summary: Retrieve the list of relays
      description: Retrieve the list of relays
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/relay'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    put:
      tags:
        - High Voltage
      summary: Create or update the list of relays
      description: Create or update the list of relays. Note that contents are not validated and are immediately stored to the file system.
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/relay'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - High Voltage
      summary: Delete the list of relays
      description: Delete the list of relays
      security:
        - visualToken: []
      responses:
        '204':
          description: File Deleted Successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted


##########################################################
## Controllers                                          ##
##########################################################

  /api/controllers:
    get:
      tags:
        - Controllers
      summary: Retrieve the list of defined controller UUIDs
      description: Retrieve the list of defined controller UUIDs
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/uuid'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted

  /api/controllers/{uuid}:
    get:
      tags:
        - Controllers
      summary: Retrieve a controller
      description: Retrieve a controller
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Controller UUID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controller'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    put:
      tags:
        - Controllers
      summary: Create or update a controller
      description: Create or update a controller.  Note that contents are not validated and are immediately stored to the file system.
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Controller UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controller'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - Controllers
      summary: Delete a controller
      description: Delete a controller
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Controller UUID
      responses:
        '204':
          description: File Deleted Successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted


  ##########################################################
  ## Clients                                              ##
  ##########################################################
  /api/colors:
    get:
      tags:
        - Clients
      summary: Retrieve the list of colors
      description: Retrieve the list of colors
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/color'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    put:
      tags:
        - Clients
      summary: Create or update the list of colors
      description: Create or update the list of colors
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/color'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - Clients
      summary: Delete the list of colors
      description: Delete the list of colors
      security:
        - visualToken: []
      responses:
        '204':
          description: File Deleted Successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted


  
##########################################################
##########################################################
## Components                                           ##
##########################################################
##########################################################

components:

##########################################################
## Security                                             ##
##########################################################

  securitySchemes:
    visualToken:
      type: apiKey
      in: header
      name: visual-token
      description: A security token visually displayed on the device which changes on a regular basis

 
  schemas:

    ##########################################################
    ## Standard API Responses                               ##
    ##########################################################

    error_message:
      type: object
      properties:
        error:
          type: string
          description: Message describing the error condition
          examples: 
            - Unexpected Error

    bad_request_message:
      type: object
      properties:
        message:
          type: string
          description: Message describing the issue with the request body
          examples: 
            - Missing parameter in request


    ##########################################################
    ## Errors and Event Log                                 ##
    ##########################################################

    eventLog:
      type: array
      items:
        $ref: '#/components/schemas/eventLogEntry'

    eventLogEntry:
      type: object
      properties:
        time:
          type: integer
          description: Time the event occurred, in seconds.  If NTP time was available when the event was logged, Epoch time will be used.  Otherwise, time since boot will be used
          examples: 
            - 1709398094
        level:
          type: string
          description: Severity level for the event
          enum:
            - info
            - notify
            - error
            - unknown
          examples: 
            - info
        text:
          type: string
          description: Descriptive text about the event
          examples: 
            - Event log started

    errorLog:
      type: array
      items:
        $ref: '#/components/schemas/errorLogEntry'

    errorLogEntry:
      type: object
      properties:
        text:
          type: string
          description: Descriptive text about the event
          examples: 
            - EEPROM Failure


    ##########################################################
    ## Versions                                             ##
    ##########################################################

    applicationVersion:
      type: string
      description: Software version
      examples: 
        - '2024.2.1'

    productHex:
      type: string
      description: Hardware product hexadecimal, indicating the version of the firmware
      examples: 
        - '0x8062305'

    applicationVersionInfo:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/applicationVersion'
        product_hex:
          $ref: '#/components/schemas/productHex'

    uiVersionInfo:
      type: object
      properties:
        ui:
          $ref: '#/components/schemas/applicationVersion'


    ##########################################################
    ## Certificates                                         ##
    ##########################################################

    certificateListItem:
      type: object
      properties:
        file:
          type: string
          description: Certificate's filename
          examples: 
             - mycert.pem
        size:
          type: integer
          description: Certificate's size in bytes
          examples: 
            - 1410
    
    certificateList:
      type: array
      items:
        $ref: '#/components/schemas/certificateListItem'
    
    certificateContent:
      type: string
      examples: 
        - '-----BEGIN CERTIFICATE----- MIID0zCCArugAwIBAgIQVmcdBOpPmUxvEIFHWdJ1lDANBgkqhkiG9w0BAQwFADB7 MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYD VQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UE AwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTE5MDMxMjAwMDAwMFoXDTI4 MTIzMTIzNTk1OVowgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpOZXcgSmVyc2V5 MRQwEgYDVQQHEwtKZXJzZXkgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBO ZXR3b3JrMS4wLAYDVQQDEyVVU0VSVHJ1c3QgRUNDIENlcnRpZmljYXRpb24gQXV0 aG9yaXR5MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEGqxUWqn5aCPnetUkb1PGWthL q8bVttHmc3Gu3ZzWDGH926CJA7gFFOxXzu5dP+Ihs8731Ip54KODfi2X0GHE8Znc JZFjq38wo7Rw4sehM5zzvy5cU7Ffs30yf4o043l5o4HyMIHvMB8GA1UdIwQYMBaA FKARCiM+lvEH7OKvKe+CpX/QMKS0MB0GA1UdDgQWBBQ64QmG1M8ZwpZ2dEl23OA1 xmNjmjAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zARBgNVHSAECjAI MAYGBFUdIAAwQwYDVR0fBDwwOjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5j b20vQUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNAYIKwYBBQUHAQEEKDAmMCQG CCsGAQUFBzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJKoZIhvcNAQEM BQADggEBABns652JLCALBIAdGN5CmXKZFjK9Dpx1WywV4ilAbe7/ctvbq5AfjJXy ij0IckKJUAfiORVsAYfZFhr1wHUrxeZWEQff2Ji8fJ8ZOd+LygBkc7xGEJuTI42+ FsMuCIKchjN0djsoTI0DQoWz4rIjQtUfenVqGtF8qmchxDM6OW1TyaLtYiKou+JV bJlsQ2uRl9EMC5MCHdK8aXdJ5htN978UeAOwproLtOGFfy/cQjutdAFI3tZs4RmY CV4Ks2dH/hzg1cEo70qLRDEmBDeNiXQ2Lu+lIg+DdEmSx/cQwgwp+7e9un/jX9Wf 8qn0dNW44bOwgeThpWOjzOoEeJBuv/c= -----END CERTIFICATE-----'
    
    
    ##########################################################
    ## OTA Firmware                                         ##
    ##########################################################
    
    otaConfiguration:
      type: object
      properties:
        url:
          type: string
          format: url
          description: URL for the firmware update server
          examples: 
            - http://www.somewhere.com/firmware.json
        certificate:
          type: string
          description: File name for the certificate that should be used when https is specified.  The existence of the certificate will not be checked until the OTA config is reloaded (typically on reboot)
          examples: 
            - mycert.pem
      required:
        - url

    forceOTAConfiguration:
      type: object
      properties:
        url:
          type: string
          format: url
          description: URL for the binary file to flash
        certificate:
          type: string
          description: File name for the certificate that should be used when https is specified
          examples: 
            - mycert.pem
      required:
        - url


    ##########################################################
    ## Controller                                           ##
    ##########################################################

    controller:
      type: object
      properties:
        name:
          type: string
          description: Human-friendly name of the controller
          examples: 
            - First floor
          maxLength: 20
        ports:
          $ref: '#/components/schemas/inputPort'
        outputs:
          $ref: '#/components/schemas/outputPort'
      required:
        - name

    inputPort:
      type: object
      propertyNames:
          pattern: ^[1-9][0-9]*$
      additionalProperties:
        type: object
        properties:
          name:
            type: string
            description: Human-friendly name
            maxLength: 20
          unique_id:
            type: string
            description: Human-friendly name
            maxLength: 8
          channels:
            type: object
            propertyNames: 
              pattern: ^[1-3,6]$
            additionalProperties:
              $ref: '#/components/schemas/channel'
        required:
          - unique_id
      examples:
        - 1:
           unique_id: S22
           channels:
            1:
              long_change: true
              actions:
                - type: INCREASE
                  output: 4
            2:
              long_change: true
              actions:
              - type: DECREASE
                output: 4
          5:
            name: Kitchen Entryway
            unique_id: S7
            channels:
              1:
                enabled: false
              2:
                type: NORMALLY_CLOSED
                actions:
                - type: TOGGLE
                  output: 12

    channel:
      type: object
      properties:
        type:
          type: string
          description: Defines if the channel is normally open or normally closed
          default: NORMALLY_OPEN
          enum:
            - NORMALLY_OPEN
            - NORMALLY_CLOSED
        long_change:
          type: boolean
          description: Indicates if long changes are enabled for this input
          default: false
        enabled:
          type: boolean
          description: Indicates if the channel is enabled
          default: true
        actions:
            type: array
            items:
                $ref: '#/components/schemas/action'

    outputPort:
      type: object
      propertyNames:
          pattern: ^[1-9][0-9]*$
      additionalProperties:
        type: object
        properties:
          name:
            type: string
            description: Human-friendly name
            maxLength: 20
          area:
            type: string
            description: Area where the output fixture is located
            maxLength: 20
          icon:
            type: string
            description: Reference to an MDI icon
            maxLength: 64
          type:
            type: string
            description: Defines if the fixture has a binary or variable output
            enum:
              - BINARY
              - VARIABLE
            default: BINARY
          enabled:
            type: boolean
            description: Indicates if the output is enabled
            default: true
      examples:
        - 4:
            name: Chandelier
            area: Foyer
            icon: chandelier
            type: VARIABLE
          12:
            name: Recessed Lights
            area: Bathroom
            icon: light-recessed
          13:
            enabled: false

    action:
        type: object
        properties:
          action:
            type: string
            description: Action to take
            enum:
              - INCREASE
              - DECREASE
              - TOGGLE
          output:
            type: number
            format: integer
            description: The output number the requested action will be applied to
            pattern: ^[1-9][0-9]*$
        required:
          - action
          - output

    uuid:
      type: string
      description: Unique identifier
      format: uuid
      minLength: 36
      maxLength: 36


    ##########################################################
    ## High Voltage                                         ##
    ##########################################################

    breaker:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/uuid'
        name:
          type: string
          description: Human-friendly name of the breaker
          examples: 
            - Panel A Breaker 2
          minLength: 1
          maxLength: 20
        amperage:
          $ref: '#/components/schemas/amperage_breaker'
      required:
        - uuid
        - name
    
    amperage_breaker:
      type: number
      format: double
      description: Maximum amperage rating for the breaker
      minimum: 0
      default: 0
      examples: 
        - 20
    
    amperage_fixture:
      type: number
      format: double
      description: Maximum amperage draw of fixture(s) when powered on to maximum potential
      minimum: 0
      default: 0
      examples: 
        - 3.5
    
    relay_name:
      type: string
      description: Human-friendly name of the relay
      examples: 
        - Circuit 12
      minLength: 1
      maxLength: 20
    
    relay_type:
      type: string
      description: Defines if the relay output to the fixture is binary or variable
      enum:
        - BINARY
        - VARIABLE
      default: BINARY
    
    relay_model:
      type: string
      description: Identifies the manufacturer and model of the relay
      examples: 
        - DR2220D20U
      maxLength: 20

    relay:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/uuid'
        name:
          $ref: '#/components/schemas/relay_name'
        amperage:
          $ref: '#/components/schemas/amperage_fixture'
        type:
          $ref: '#/components/schemas/relay_type'
        model:
          $ref: '#/components/schemas/relay_model'
      required:
        - name
        - uuid

    ##########################################################
    ## Clients                                              ##
    ##########################################################

    color:
      type: object
      properties:
        name:
          type: string
          description: Human-friendly name of the color
        hex:
          type: string
          description: 'Hexidecimal color code for the color, including the # sign'
          format: hexidecimal
          pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
      required:
        - name
        - hex
      examples:
        - name: Red
          hex: '#FF0000'
        

##########################################################
##########################################################
## Examples                                             ##
##########################################################
##########################################################

  examples:
    emptyArray:
      value: []

    eventLog:
      value:
        - time: 1709398094
          level: info
          text: Event log started
        - time: 1709398150
          level: notify
          text: MQTT connected
        - time: 1709398228
          level: error
          text: MQTT disconnected
    
    errorLog:
      value:
        - text: MQTT disconnected
        - text: Ethernet disconnected
   
    ota_http:
      value:
        url: http://www.somewhere.com/firmware.json
    
    ota_https:
      value:
        url: https://www.somewhere.com/firmware.json
        certificate: mycert.pem