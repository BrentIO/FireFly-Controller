openapi: 3.1.0
info:
  title: FireFly Controller
  description: Configure and manage controllers and client configurations
  version: 2025.1.1
servers:
  - url: http://{domain}
    variables:
      domain:
        default: 192.168.10.101
        description: IP address of the device's ethernet interface
tags:
  - name: Authorization
    description: Manage long-term http authorizations
  - name: Event and Error Logs
    description: Operations for the event and error logs
  - name: Version
    description: Operations for the hardware and firmware versions
  - name: Certificates
    description: Operations for the storage, retrieval, and management of certificates
  - name: Controllers
    description: Manage controllers
  - name: Clients
    description: Manage clients
  - name: General
    description: Helper operations

##########################################################
## NOTE: This may not render except in the next-gen     ##
## Swagger UI renderer https://editor-next.swagger.io/  ##
##########################################################

paths:


##########################################################
## Version                                              ##
##########################################################
  
  /api/version:
    get:
      tags:
        - Version
      summary: Hardware and firmware version information
      description: Retrieves the hardware and firmware version information
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationVersionInfo'
        '401':
          description: Unauthorized
  /ui/version:
    get:
      tags:
        - Version
      summary: User interface version information
      description: Retrieves the user interface version information
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uiVersionInfo'
        '401':
          description: Unauthorized
        '404':
          description: File system failure


##########################################################
## Events and Errors                                    ##
##########################################################
  
  /api/errors:
    get:
      tags:
        - Event and Error Logs
      summary: Error log information
      description: Retrieve all of the active errors
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorLog'
              examples:
                Events in the log:
                  $ref: '#/components/examples/errorLog'
                No log entries:
                  $ref: '#/components/examples/emptyArray'
        '401':
          description: Unauthorized

  /api/events:
    get:
      tags:
        - Event and Error Logs
      summary: Event log information
      description: Retrieve all of the events still remaining in the event log
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventLog'
              examples:
                Events in the log:
                  $ref: '#/components/examples/eventLog'
                No log entries:
                  $ref: '#/components/examples/emptyArray'
        '401':
          description: Unauthorized


##########################################################
## OTA Firmware                                         ##
##########################################################
  
  /api/ota/app:
    post:
      tags:
        - Clients
        - Controllers
      summary: Force application OTA update
      description: Forces an over-the-air (OTA) application firmware retrieval with the URL provided
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forceOTAConfiguration'
            examples:
              http:
                value:
                  url: http://www.somewhere.com/firmware.bin
              https:
                value:
                  url: https://www.somewhere.com/firmware.bin
                  certificate: mycert.pem
      responses:
        '202':
          description: Request accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized

  /api/ota/spiffs:
    post:
      tags:
        - Clients
        - Controllers
      summary: Force SPIFFs OTA update
      description: Forces an over-the-air (OTA) SPIFFs retrieval with the URL provided
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forceOTAConfiguration'
            examples:
              http:
                value:
                  url: http://www.somewhere.com/spiffs.bin
              https:
                value:
                  url: https://www.somewhere.com/spiffs.bin
                  certificate: mycert.pem
      responses:
        '202':
          description: Request accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized


##########################################################
## Certificates                                         ##
##########################################################

  /certs:
    get:
      tags:
        - Certificates
      summary: Get certificate list
      description: Retrives the list of certificates in flash storage
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    post:
      tags:
        - Certificates
      summary: Create a new certificate
      description: Creates a new certificate with the content in the payload
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Filename must be 31 characters or less
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Certificate already exists
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted

  /certs/{filename}:
    get:
      tags:
        - Certificates
      summary: Get a certificate
      description: Retrieves the content of a certificate
      security:
        - visualToken: []
      parameters:
        - in: path
          name: filename
          schema:
            type: string
            examples: 
              - mycert.pem
            maxLength: 31
          required: true
          description: Certificate filename to retrieve
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/certificateContent'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - Certificates
      summary: Delete a certificate
      description: Deletes the requested certificate from flash storage
      security:
        - visualToken: []
      parameters:
        - in: path
          name: filename
          schema:
            type: string
            examples: 
              - mycert.pem
            maxLength: 31
          required: true
          description: Certificate filename to delete
      responses:
        '204':
          description: Deleted certificate successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
  /auth:
    post:
      tags:
        - Authorization
      summary: Authorize the visual token
      description: Creates a long-term authorization for a visual token (typically 60 minutes)
      security:
        - visualToken: []
      responses:
        '204':
          description: Authorized
        '401':
          description: Unauthorized


##########################################################
## Provisioning                                         ##
##########################################################

  /api/provisioning:
    get:
      tags:
        - Controllers
      summary: Retrieve the status of provisioning mode on this controller
      description: Retrieve the status of provisioning mode on this controller
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: Indicates if provisioning mode is enabled on the device
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
    put:
      tags:
        - Controllers
      summary: Enable provisioning mode on this controller
      description: Enable provisioning mode on this controller
      security:
        - visualToken: []
      responses:
        '202':
          description: Request accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Not supported by hardware
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
    delete:
      tags:
        - Controllers
      summary: Disable provisioning mode on this controller
      description: Disable provisioning mode on this controller
      security:
        - visualToken: []
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
              example:
                message: Not supported by hardware
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'


##########################################################
## Controllers                                          ##
##########################################################

  /api/controllers:
    get:
      tags:
        - Controllers
      summary: Retrieve the list of defined controller UUIDs
      description: Retrieve the list of defined controller UUIDs
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/uuid'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted

  /api/controllers/{uuid}:
    get:
      tags:
        - Controllers
      summary: Retrieve a controller
      description: Retrieve a controller
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Controller UUID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controller'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    put:
      tags:
        - Controllers
      summary: Create or update a controller
      description: Create or update a controller.  Note that contents are not validated and are immediately stored to the file system.
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Controller UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controller'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - Controllers
      summary: Delete a controller
      description: Delete a controller
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Controller UUID
      responses:
        '204':
          description: File Deleted Successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted


  ##########################################################
  ## Clients                                              ##
  ##########################################################
  /api/clients:
    get:
      tags:
        - Clients
      summary: Retrieve the list of defined client UUIDs
      description: Retrieve the list of defined client UUIDs
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/uuid'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted

  /api/clients/{uuid}:
    get:
      tags:
        - Clients
      summary: Retrieve a client
      description: Retrieve a client
      security:
        - visualToken: []
        - macAddress: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Client UUID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: Provisioning mode inactive
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: Request will not be fulfilled
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    put:
      tags:
        - Clients
      summary: Create or update a client
      description: Create or update a client.  Note that contents are not validated and are immediately stored to the file system.
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Client UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_message'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - Clients
      summary: Delete a client
      description: Delete a client
      security:
        - visualToken: []
      parameters:
        - in: path
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
          required: true
          description: Client UUID
      responses:
        '204':
          description: File Deleted Successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted


  ##########################################################
  ## General                                              ##
  ##########################################################
  
  /backup:
    get:
      tags:
        - General
      summary: Retrieve the backup of the database
      description: Retrieves the backup of the database in Dexie format.
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dexieFormat'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    put:
      tags:
        - General
      summary: Create or replace a backup of the database
      description: Create or replace a backup of the database in Dexie format.  Note that contents are not validated and are immediately stored to the file system.
      security:
        - visualToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dexieFormat'
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
    delete:
      tags:
        - General
      summary: Deletes the stored backup
      description: Deletes the stored backup
      security:
        - visualToken: []
      responses:
        '204':
          description: File Deleted Successfully
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
              example:
                message: File system not mounted
  

  /files:
    get:
      tags:
        - General
      summary: Retrieve a list of files across all file systems
      description: Retrieve a list of files by file system
      security:
        - visualToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileList'
        '401':
          description: Unauthorized

  
##########################################################
##########################################################
## Components                                           ##
##########################################################
##########################################################

components:

##########################################################
## Security                                             ##
##########################################################

  securitySchemes:
    visualToken:
      type: apiKey
      in: header
      name: visual-token
      description: A security token visually displayed on the device which changes on a regular basis

    macAddress:
      type: apiKey
      in: header
      name: mac-address
      description: A client MAC address that matches the resource being requested, valid only while in provisoining mode

 
  schemas:

    ##########################################################
    ## Standard API Responses                               ##
    ##########################################################

    error_message:
      type: object
      properties:
        error:
          type: string
          description: Message describing the error condition
          examples: 
            - Unexpected Error

    bad_request_message:
      type: object
      properties:
        message:
          type: string
          description: Message describing the issue with the request body
          examples: 
            - Missing parameter in request


    ##########################################################
    ## Errors and Event Log                                 ##
    ##########################################################

    eventLog:
      type: array
      items:
        $ref: '#/components/schemas/eventLogEntry'

    eventLogEntry:
      type: object
      properties:
        time:
          type: integer
          description: Time the event occurred, in seconds.  If NTP time was available when the event was logged, Epoch time will be used.  Otherwise, time since boot will be used
          examples: 
            - 1709398094
        level:
          type: string
          description: Severity level for the event
          enum:
            - info
            - notify
            - error
            - unknown
          examples: 
            - info
        text:
          type: string
          description: Descriptive text about the event
          examples: 
            - Event log started

    errorLog:
      type: array
      items:
        $ref: '#/components/schemas/errorLogEntry'

    errorLogEntry:
      type: object
      properties:
        text:
          type: string
          description: Descriptive text about the event
          examples: 
            - EEPROM Failure


    ##########################################################
    ## Versions                                             ##
    ##########################################################

    applicationVersion:
      type: string
      description: Software version
      examples: 
        - '2024.2.1'

    productHex:
      type: string
      description: Hardware product hexadecimal, indicating the version of the firmware
      examples: 
        - '0x8062305'

    applicationVersionInfo:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/uuid'
        product_id:
          $ref: '#/components/schemas/productId'
        product_hex:
          $ref: '#/components/schemas/productHex'
        application:
          $ref: '#/components/schemas/applicationVersion'

    productId:
      type: string
      description: Device product ID, which includes the board revision code
      examples: 
        - FFC3232-2211
      maxLength: 32

    uiVersionInfo:
      type: object
      properties:
        ui:
          $ref: '#/components/schemas/applicationVersion'


    ##########################################################
    ## Certificates                                         ##
    ##########################################################

    certificateListItem:
      type: object
      properties:
        file:
          type: string
          description: Certificate's filename
          examples: 
             - mycert.pem
        size:
          type: integer
          description: Certificate's size in bytes
          examples: 
            - 1410
    
    certificateList:
      type: array
      items:
        $ref: '#/components/schemas/certificateListItem'
    
    certificateContent:
      type: string
      examples: 
        - '-----BEGIN CERTIFICATE----- MIID0zCCArugAwIBAgIQVmcdBOpPmUxvEIFHWdJ1lDANBgkqhkiG9w0BAQwFADB7 MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYD VQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UE AwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTE5MDMxMjAwMDAwMFoXDTI4 MTIzMTIzNTk1OVowgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpOZXcgSmVyc2V5 MRQwEgYDVQQHEwtKZXJzZXkgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBO ZXR3b3JrMS4wLAYDVQQDEyVVU0VSVHJ1c3QgRUNDIENlcnRpZmljYXRpb24gQXV0 aG9yaXR5MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEGqxUWqn5aCPnetUkb1PGWthL q8bVttHmc3Gu3ZzWDGH926CJA7gFFOxXzu5dP+Ihs8731Ip54KODfi2X0GHE8Znc JZFjq38wo7Rw4sehM5zzvy5cU7Ffs30yf4o043l5o4HyMIHvMB8GA1UdIwQYMBaA FKARCiM+lvEH7OKvKe+CpX/QMKS0MB0GA1UdDgQWBBQ64QmG1M8ZwpZ2dEl23OA1 xmNjmjAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zARBgNVHSAECjAI MAYGBFUdIAAwQwYDVR0fBDwwOjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5j b20vQUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNAYIKwYBBQUHAQEEKDAmMCQG CCsGAQUFBzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJKoZIhvcNAQEM BQADggEBABns652JLCALBIAdGN5CmXKZFjK9Dpx1WywV4ilAbe7/ctvbq5AfjJXy ij0IckKJUAfiORVsAYfZFhr1wHUrxeZWEQff2Ji8fJ8ZOd+LygBkc7xGEJuTI42+ FsMuCIKchjN0djsoTI0DQoWz4rIjQtUfenVqGtF8qmchxDM6OW1TyaLtYiKou+JV bJlsQ2uRl9EMC5MCHdK8aXdJ5htN978UeAOwproLtOGFfy/cQjutdAFI3tZs4RmY CV4Ks2dH/hzg1cEo70qLRDEmBDeNiXQ2Lu+lIg+DdEmSx/cQwgwp+7e9un/jX9Wf 8qn0dNW44bOwgeThpWOjzOoEeJBuv/c= -----END CERTIFICATE-----'
    
    
    ##########################################################
    ## OTA Firmware                                         ##
    ##########################################################
    
    otaConfiguration:
      type: object
      properties:
        url:
          type: string
          format: url
          description: URL for the firmware update server
          minLength: 1
          maxLength: 128
          examples: 
            - http://www.somewhere.com/firmware.json
        certificate:
          type: string
          description: File name for the certificate that should be used when https is specified.  The existence of the certificate will not be checked until the OTA config is reloaded (typically on reboot)
          examples: 
            - mycert.pem
      required:
        - url

    forceOTAConfiguration:
      type: object
      properties:
        url:
          type: string
          format: url
          minLength: 1
          maxLength: 128
          description: URL for the binary file to flash
        certificate:
          type: string
          description: File name for the certificate that should be used when https is specified
          minLength: 1
          maxLength: 31
          examples: 
            - mycert.pem
      required:
        - url


    ##########################################################
    ## Controller                                           ##
    ##########################################################

    controller:
      type: object
      properties:
        name:
          type: string
          description: Human-friendly name of the controller
          examples: 
            - First floor
          maxLength: 20 #Maximum length relates to hardware.h -> CONTROLLER_NAME_MAX_LENGTH
        area:
          type: string
          description: Area where the controller is located
          examples:
            - Tech Room
          maxLength: 20 #Maximum length relates to hardware.h -> CONTROLLER_AREA_MAX_LENGTH
        ports:
          $ref: '#/components/schemas/inputPort'
        outputs:
          $ref: '#/components/schemas/outputPort'
        ota:
          $ref: '#/components/schemas/otaConfiguration'
        mqtt:
          $ref: '#/components/schemas/mqtt'
      required:
        - name

    inputPort:
      type: object
      propertyNames:
          pattern: ^[1-9][0-9]*$
      additionalProperties:
        type: object
        properties:
          name:
            type: string
            description: Human-friendly name
            maxLength: 20
          id:
            type: string
            description: A short ID for the input, used for addressing the device over MQTT.  When an input spans multiple input ports (such as a switch with 6 buttons), the same ID should be used across both input ports
            maxLength: 8 #Maximum length relates to hardware.h -> PORT_ID_MAX_LENGTH
            pattern: ^[A-Za-z0-9~!@#$%^&*()_+-=|]+$
          offset:
            type: number
            description: Offset to add to the channel number, used when an input spans multiple ports (such as a switch witih 6 buttons)
            default: 0
          channels:
            type: object
            propertyNames: 
              pattern: ^[1-3,6]$
            additionalProperties:
              $ref: '#/components/schemas/channel'
        required:
          - id
      examples:
        - 1:
           id: S22
           channels:
            1:
              actions:
                - type: INCREASE_MAXIMUM
                  change_state: LONG
                  output: 4
                - type: INCREASE
                  output: 4
            2:
              actions:
              - type: DECREASE
                change_state: SHORT
                output: 4
            3:
              actions:
              - type: TOGGLE
                change_state: SHORT
                output: 6
            4:
              actions:
              - type: DECREASE
                change_state: SHORT
                output: 4
          2:
           id: S22
           channels:
            1:
              offset: 4
              actions:
                - type: INCREASE_MAXIMUM
                  change_state: LONG
                  output: 9
                - type: INCREASE
                  output: 9
            2:
              offset: 4
              actions:
              - type: DECREASE
                change_state: SHORT
                output: 11
          3:
           id: S17
           channels:
            1:
              actions:
                - type: TOGGLE
                  output: 6


    channel:
      type: object
      properties:
        type:
          type: string
          description: Defines if the channel is normally open or normally closed
          default: NORMALLY_OPEN
          enum:
            - NORMALLY_OPEN
            - NORMALLY_CLOSED
        enabled:
          type: boolean
          description: Indicates if the channel is enabled
          default: true
        actions:
            type: array
            items:
                $ref: '#/components/schemas/action'

    outputPort:
      type: object
      propertyNames:
          pattern: ^[1-9][0-9]*$
      additionalProperties:
        type: object
        properties:
          name:
            type: string
            description: Human-friendly name
            maxLength: 20   #Maximum length relates to hardware.h -> OUTPUT_ID_MAX_LENGTH
          id:
            type: string
            description: A unique short ID for the output, used for addressing the device over MQTT
            maxLength: 8    #Maximum length relates to hardware.h -> OUTPUT_ID_MAX_LENGTH
            pattern: ^[A-Za-z0-9~!@#$%^&*()_+-=|]+$
          area:
            type: string
            description: Area where the output fixture is located
            maxLength: 20
          icon:
            type: string
            description: Reference to an MDI icon
            maxLength: 64
          type:
            type: string
            description: Defines if the fixture has a binary or variable output
            enum:
              - BINARY
              - VARIABLE
            default: BINARY
          enabled:
            type: boolean
            description: Indicates if the output is enabled
            default: true
        required:
          - id
      examples:
        - 4:
            id: C49
            name: Chandelier
            area: Foyer
            icon: mdi:chandelier
            type: VARIABLE
          12:
            id: C12
            name: Recessed Lights
            area: Bathroom
            icon: mdi:light-recessed
          13:
            id: C7
            enabled: false

    action:
        type: object
        properties:
          change_state:
            type: string
            description: The action will be taken when the change state is observed
            default: SHORT
            enum:
              - SHORT
              - LONG
          action:
            type: string
            description: Action to take
            enum:
              - INCREASE
              - INCREASE_MAXIMUM
              - DECREASE
              - DECREASE_MAXIMUM
              - TOGGLE
          output:
            type: number
            format: integer
            description: The output number the requested action will be applied to
            pattern: ^[1-9][0-9]*$
        required:
          - action
          - output


    ##########################################################
    ## Client                                           ##
    ##########################################################

    client:
      type: object
      properties:
        name:
          type: string
          description: Human-friendly name of the client
          examples: 
            - First floor
          maxLength: 20 #Maximum length relates to hardware.h -> CLIENT_NAME_MAX_LENGTH
        mac:
          $ref: '#/components/schemas/macAddress'
        area:
          type: string
          description: Area where the client is located
          examples:
            - Tech Room
          maxLength: 20 #Maximum length relates to hardware.h -> CLIENT_AREA_MAX_LENGTH
        hids:
          $ref: '#/components/schemas/hid'
        ota:
          $ref: '#/components/schemas/otaConfiguration'
        mqtt:
          $ref: '#/components/schemas/mqtt'
        wifi:
          $ref: '#/components/schemas/wifi'
      required:
        - name

    hid:
      type: object
      description: Human Interface Device
      propertyNames:
        pattern: ^[0-5]$
      additionalProperties:
        type: object
        properties:
          color:
            $ref: '#/components/schemas/colorName'
          tags:
            type: array
            items:
              $ref: '#/components/schemas/tag'
      examples:
        - 1:
            color: Blue
            tags:
              - Holiday
          2:
            color: Yellow
            tags:
              - Security
              - Holiday
          4:
            color: Yellow

    wifi:
      type: object
      description: WiFi configuration settings
      properties:
        ssid:
          type: string
          description: Network SSID to connect
          minLength: 1
          maxLength: 32
          examples:
            - MyWiFiNet
        password:
          type: string
          description: Pre-shared WiFi password/key
          minLength: 8
          maxLength: 63
          examples:
            - aVery$3cretPassw0r[)

    macAddress:
      type: string
      description: Hardware MAC address
      pattern: ^(?:[0-9a-f]{2}[:]){5}(?:[0-9a-f]{2})$


    ##########################################################
    ## General                                              ##
    ##########################################################

    fileList:
      type: object
      propertyNames:
        type: string
        enum: [config, www]
      additionalProperties:
        type: object
        properties:
          total:
            type: number
            format: integer
            description: Total number of bytes on the file system
          used:
            type: number
            format: integer
            description: Used number of bytes on the file system
          files:
            type: array
            items:
              type: object
              properties:
                path:
                  type: string
                  description: Fully-qualified path and filename of the file
                size:
                  type: number
                  format: integer
                  description: Used number of bytes consumed by the file
          error:
            type: string
            description: Is sent if an error if there is one for the file system
      examples:
        - config:
            total: 524288
            used: 69632
            files:
              - path: /devices/controllers/3fa85f64-5717-4562-b3fc-2c963f66afa6
                size: 912
          www:
            error: File system not mounted

    dexieFormat:
      type: object

    uuid:
      type: string
      description: Unique identifier
      format: uuid
      minLength: 36
      maxLength: 36

    mqtt:
      type: object
      description: MQTT configuration settings
      properties:
        host:
          type: string
          description: The hostname for the MQTT server
          minLength: 1
          maxLength: 64
          examples:
            - mymqtt.host.com
        port:
          type: integer
          description: The port number for the MQTT server
          default: 1883
          minimum: 1
          maximum: 65535
          examples:
            - 1883
        username:
          type: string
          description: Authentication username
          minLength: 1
          maxLength: 64
          examples:
            - controller1
        password:
          type: string
          description: Authentication password
          minLength: 1
          maxLength: 64
          examples:
            - aVery$3cretPassw0r[)

    tag:
      type: string
      description: An arbitrary piece of associated data
      minLength: 1
      maxLength: 20
      examples:
        - Security
        - Holiday

    colorName:
      type: string
      description: Human-friendly name of a color
      minLength: 1
      maxLength: 20
      examples:
        - Blue
        - Red


##########################################################
##########################################################
## Examples                                             ##
##########################################################
##########################################################

  examples:
    emptyArray:
      value: []

    eventLog:
      value:
        - time: 1709398094
          level: info
          text: Event log started
        - time: 1709398150
          level: notify
          text: MQTT connected
        - time: 1709398228
          level: error
          text: MQTT disconnected
    
    errorLog:
      value:
        - text: MQTT disconnected
        - text: Ethernet disconnected
   
    ota_http:
      value:
        url: http://www.somewhere.com/firmware.json
    
    ota_https:
      value:
        url: https://www.somewhere.com/firmware.json
        certificate: mycert.pem