name: Build Firmware

on: workflow_dispatch

env:
  VERSION_ESP_Core: 2.0.11

jobs:

  ConfigureAndBuild:
    name: Build ${{ matrix.name }}
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        application:
          - Controller
          
        product_hex:
          - 0x08062305

        include:
          - product_hex: "0x08062305"
            name: FFC0806-2305
            partition_size_config: "0x80000"
            partition_size_www: "0x2E0000"

        #  - product_hex: "0x32322304"
        #    name: "FFC3232-2304"
        #    partition_size_config: "0x80000"
        #    partition_size_www: 0x2E0000

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Arduino CLI
        uses: arduino/setup-arduino-cli@v2
        with:
          version: 0.35.3

      - name: Initialize the installation
        run: arduino-cli config init

      - name: Add the ESP32 board manager packages
        run: arduino-cli config set board_manager.additional_urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json

      - name: Update the core index
        run: arduino-cli core update-index

      - name: Install ESP32 core
        run: arduino-cli core install esp32:esp32@$VERSION_ESP_Core

      - name: Create symlink for boards.local.txt
        run: |
          ARDUINO_DIR=`arduino-cli config dump --format json | jq -r .directories.data`
          ln -s ${{ github.workspace }}/boards.local.txt ${ARDUINO_DIR}/packages/esp32/hardware/esp32/$VERSION_ESP_Core/boards.local.txt
          cat ${ARDUINO_DIR}/packages/esp32/hardware/esp32/$VERSION_ESP_Core/boards.local.txt

      - name: Enable unsafe installation so that git can be usedocal zip files can be installed
        run: arduino-cli config set library.enable_unsafe_install true
      
     # - name: Install required libraries at specified revisions
     #   run: |
     #     arduino-cli lib install --git-url https://github.com/adafruit/Adafruit_BusIO.git#1.14.1
     #     arduino-cli lib install --git-url https://github.com/adafruit/Adafruit-GFX-Library.git#1.11.5
     #     arduino-cli lib install --git-url https://github.com/adafruit/Adafruit_SSD1306.git#2.5.7
     #     arduino-cli lib install --git-url https://github.com/bblanchon/ArduinoJson.git#v6.21.5
     #     arduino-cli lib install --git-url https://github.com/bblanchon/ArduinoStreamUtils.git#v1.9.0
     #     arduino-cli lib install --git-url https://github.com/BrentIO/AsyncTCP.git#2024.2.1
     #     arduino-cli lib install --git-url https://github.com/BrentIO/AsyncWebServer_ESP32_W5500.git#2024.7.1
     #     arduino-cli lib install --git-url https://github.com/BrentIO/ESPAsyncWebServer.git#2024.7.1
     #     arduino-cli lib install --git-url https://github.com/BrentIO/esp32FOTA.git#2025.4.1
     #     arduino-cli lib install --git-url https://github.com/BrentIO/PCA95x5.git#2023.10.2
     #     arduino-cli lib install --git-url https://github.com/BrentIO/PCT2075.git#2023.10.3
     #     arduino-cli lib install --git-url https://github.com/BrentIO/pubsubclient.git#2025.4.1
     #     arduino-cli lib install --git-url https://github.com/arduino-libraries/Ethernet.git#2.0.2
     #     arduino-cli lib install --git-url https://github.com/RobTillaart/I2C_EEPROM.git#1.7.1
     #     arduino-cli lib install --git-url https://github.com/ivanseidel/LinkedList.git#v1.3.3
     #     arduino-cli lib install --git-url https://github.com/arduino-libraries/NTPClient.git#3.2.1
     #     arduino-cli lib install --git-url https://github.com/RobTillaart/PCA9685_RT.git#0.4.1
     #     arduino-cli lib install --git-url https://github.com/nickgammon/Regexp.git#0.1.1

      - name: Print Libraries
        run: arduino-cli lib list

      - name: Create Empty Directory
        run: mkdir -p ~/empty/

      - name: Create Output Directory
        run: mkdir -p ~/artifacts/${{ matrix.name }}/${{ matrix.application }}/
      
      #- name: Compile
      #  run: arduino-cli compile -b esp32:esp32:firefly_controller ./${{ matrix.application }} --warnings more --clean --build-property "build.extra_flags=-DASYNCWEBSERVER_REGEX -DPRODUCT_HEX=${{ matrix.product_hex }} -DESP32 -I${{ github.workspace }}" --output-dir ~/artifacts/${{ matrix.name }}/${{ matrix.application }}/

      - name: Build spiffs images
        run: |
          ARDUINO_DIR=`arduino-cli config dump --format json | jq -r .directories.data`
          ${ARDUINO_DIR}/packages/esp32/tools/mklittlefs/**/mklittlefs -s ${{ matrix.partition_size_www }} -c ${{ github.workspace }}/${{ matrix.application }}/www ~/artifacts/${{ matrix.name }}/${{ matrix.application }}/www.bin
          ${ARDUINO_DIR}/packages/esp32/tools/mklittlefs/**/mklittlefs -s ${{ matrix.partition_size_config }} -c ~/empty ~/artifacts/${{ matrix.name }}/${{ matrix.application }}/config.bin

      - uses: actions/upload-artifact@v4
        name: Upload Artifacts
        with:
          retention-days: 1
          if-no-files-found: error
          name: ${{ matrix.name }}-${{ matrix.application }}
          path: ~/artifacts/*
